# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

executors:
  openjdk8:
    docker:
      - image: circleci/openjdk:8-jdk
  integration:
    machine:
      resource_class: large
      image: ubuntu-1604:201903-01
jobs:
  build:
    executor: openjdk8
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx1g
      GRADLE_OPTS: "-Dorg.gradle.workers.max=4"
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - gradle-

      - run:
          name: Assemble
          command: ./gradlew assemble

      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle" }}

      - run:
          name: Tests
          command: ./gradlew test

      - run:
          name: Lint check
          command: ./gradlew lint

      - run:
          name: Build validation
          command: ./gradlew build

  integration-tests:
    # machine executor required for testcontainers docker access
    executor: integration
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx1g
      GRADLE_OPTS: "-Dorg.gradle.workers.max=4"
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - gradle-

      - run:
          name: Integration Tests
          command: ./gradlew integrationTest

      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle" }}
workflows:
  version: 2
  verification:
    jobs:
      - build
      - integration-tests:
          requires:
            - build
