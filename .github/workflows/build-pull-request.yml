name: Build pull request

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK for running Gradle
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - uses: gradle/gradle-build-action@v2
        name: Build
        with:
          arguments: --stacktrace build
          cache-read-only: true

      - uses: actions/upload-artifact@v2
        name: Save unit test results
        if: always()
        with:
          name: test-results
          path: jmx-metrics/build/reports/tests/test

  integration-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK for running Gradle
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - uses: gradle/gradle-build-action@v2
        name: Integration test
        with:
          arguments: --stacktrace integrationTest
          cache-read-only: true

      - uses: actions/upload-artifact@v2
        name: Save integration test results
        if: always()
        with:
          name: integration-test-results
          path: jmx-metrics/build/reports/tests/integrationTest

  # this is not a required check to avoid blocking pull requests if external links break
  markdown-link-check:
    uses: ./.github/workflows/reusable-markdown-link-check.yml

  # this is not a required check to avoid blocking pull requests if new misspellings are added
  # to the misspell dictionary
  misspell-check:
    uses: ./.github/workflows/reusable-misspell-check.yml

  required-status-check:
    needs:
      - build
      - integration-test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - if: |
          needs.build.result != 'success' ||
          needs.integration-test.result != 'success'
        run: exit 1
