# Releases a new minor / major version from the HEAD of the main branch
name: Release Build
on:
  workflow_dispatch:
    inputs:
      version:
        description: The version to tag the release with, e.g., 1.2.0, 1.2.1-alpha.1
        required: true

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - uses: gradle/gradle-build-action@v2
        name: Build
        with:
          arguments: --stacktrace build

      - uses: actions/upload-artifact@v2
        name: Save unit test results
        if: always()
        with:
          name: test-results
          path: jmx-metrics/build/reports/tests/test

  integration-test:
    name: integration-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - uses: gradle/gradle-build-action@v2
        name: Integration Tests
        with:
          arguments: --stacktrace integrationTest

      - uses: actions/upload-artifact@v2
        name: Save integrationTest results
        if: always()
        with:
          name: integration-test-results
          path: jmx-metrics/build/reports/tests/integrationTest

  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: [build, integration-test]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - uses: gradle/gradle-build-action@v2
        name: Publish
        with:
          arguments: --stacktrace final closeAndReleaseSonatypeStagingRepository -Prelease.version=${{ github.event.inputs.version }}
        env:
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}

      - name: Set SDK version
        id: set-sdk-version
        run: |
          v=$(grep -Po "io.opentelemetry:opentelemetry-bom:\K[0-9]+.[0-9]+.0" dependencyManagement/build.gradle.kts)
          echo "::set-output name=sdk-version::$v"

      - name: Generate Release Notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat > release-notes.txt << EOF
          This release targets the OpenTelemetry SDK ${{ steps.set-sdk-version.outputs.sdk-version }}.

          EOF

          sed -n '/^## Version ${{ github.event.inputs.version }}/,/^## Version /p' CHANGELOG.md \
            | tail -n +2 \
            | head -n -1 \
            | perl -0pe 's/^\n+//g' \
            | perl -0pe 's/\n+$/\n/g' \
            | sed -r 's,\[#([0-9]+)]\(https://github.com/open-telemetry/opentelemetry-java-contrib/pull/[0-9]+\),#\1,' \
            | perl -0pe 's/\n +/ /g' \
            >> release-notes.txt

          cat >> release-notes.txt << EOF

          EOF

      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp jmx-metrics/build/libs/opentelemetry-jmx-metrics-${{ github.event.inputs.version }}.jar opentelemetry-jmx-metrics.jar
          gh release create --target ${{ github.ref_name }} \
                            --title "Version ${{ github.event.inputs.version }}" \
                            --notes-file release-notes.txt \
                            --discussion-category announcements \
                            v${{ github.event.inputs.version }} \
                            opentelemetry-javaagent.jar

        # proactively create release branch so that contributors can suggest patches more easily
      - name: Create release branch
        run: |
          branch_name=$(echo ${{ github.event.inputs.version }} | sed -E 's/([0-9]+)\.([0-9]+)\.0/v\1.\2.x/')
          git checkout -b $branch_name
          git push origin $branch_name
