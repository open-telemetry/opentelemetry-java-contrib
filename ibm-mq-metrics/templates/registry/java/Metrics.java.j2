/*
 * Copyright Splunk Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.splunk.ibm.mq.metrics;

import io.opentelemetry.api.metrics.LongCounter;
import io.opentelemetry.api.metrics.LongGauge;
import io.opentelemetry.api.metrics.Meter;

// This file is generated using weaver. Do not edit manually.

/**
 * Metric definitions generated from a Weaver model. Do not edit manually.
 */
public class Metrics {
{% for metric in ctx %}
  public static {% if metric.instrument == "gauge" %}LongGauge{% elif metric.instrument == "counter" %}LongCounter{% endif %} create{{ metric.metric_name.split('.')|map('capitalize')|join }}(Meter meter) {
    return meter.{% if metric.instrument == "gauge" %}gauge{% elif metric.instrument == "counter" %}counter{% endif %}Builder("{{ metric.metric_name }}").{% if metric.instrument == "gauge" %}ofLongs().{% endif %}setUnit("{{ metric.unit }}").setDescription("{{ metric.brief }}").build();
  }
{% endfor %}
}