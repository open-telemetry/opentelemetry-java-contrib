apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'com.jfrog.bintray'

publishing {
    repositories {
        maven {
            url = "$rootDir/build/repo"
        }
    }

    publications {
        maven(MavenPublication) {
            if (project.tasks.findByName('shadowJar') != null && findProperty('shadowPublish')) {
                project.shadow.component(it)
            } else {
                from components.java
            }

            afterEvaluate {
                artifactId = artifactPrefix(archivesBaseName) + archivesBaseName
            }

            pom {
                name = 'OpenTelemetry Java Contrib'
                packaging = 'jar'
                url = 'https://github.com/open-telemetry/opentelemetry-java-contrib'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'opentelemetry'
                        name = 'OpenTelemetry Gitter'
                        url = 'https://gitter.im/open-telemetry/community'
                    }
                }

                scm {
                    connection = 'scm:git:git@github.com:open-telemetry/opentelemetry-java-contrib.git'
                    developerConnection = 'scm:git:git@github.com:open-telemetry/opentelemetry-java-contrib.git'
                    url = 'git@github.com:open-telemetry/opentelemetry-java-contrib.git'
                }

                afterEvaluate {
                    // these properties aren't available until evaluated
                    if (project.findProperty('libraryName') != null) {
                        name = project.getProperty('libraryName')
                    }
                    description = project.description
                }
            }
        }
    }
}

def artifactPrefix(archivesBaseName) {
    if (archivesBaseName.startsWith(rootProject.name)) {
        return ''
    }
    return rootProject.name
}

task mavenPublish {
    allprojects{
        afterEvaluate { project ->
            project.tasks.forEach { task ->
                if (task.name.endsWith('publishMavenPublicationToMavenRepository')) {
                    finalizedBy task
                }
            }
        }
    }
}

artifactory {
    contextUrl = 'https://oss.jfrog.org'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = System.getenv('BINTRAY_USER')
            password = System.getenv('BINTRAY_API_KEY')
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['maven']
    publish = true

    pkg {
        repo = 'maven'
        name = 'opentelemetry-java-contrib'
        userOrg = 'open-telemetry'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/open-telemetry/opentelemetry-java-contrib.git'

        githubRepo = 'open-telemetry/opentelemetry-java-contrib'

        version {
            name = project.version
            gpg {
                sign = true
            }
        }
    }
}

task ossSnapshot {
    artifactoryPublish {
        enabled = version.toString().contains('SNAPSHOT')
        publications('maven')
    }
    finalizedBy artifactoryPublish
}

task otelRelease {
    bintrayUpload {
        enabled = !version.toString().contains('SNAPSHOT')
    }
    finalizedBy bintrayUpload
}
